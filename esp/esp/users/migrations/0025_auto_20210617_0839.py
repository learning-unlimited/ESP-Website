# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-06-17 08:39
from __future__ import unicode_literals

from __future__ import absolute_import
from django.db import migrations, models

def set_my_defaults(apps, schema_editor):
    Record = apps.get_model('users', 'Record')
    recs = Record.objects.filter(event="extra_form_done")
    if recs.exists():
        for rec in recs:
            # Guess whether it was for the teacher or student custom form
            if rec.user.groups.filter(name='Teacher').exists() and rec.program.program_modules.filter(handler='TeacherCustomFormModule').exists():
                rec.event = "teacher_extra_form_done"
            else:
                rec.event = "student_extra_form_done"
            rec.save()

def reverse_func(apps, schema_editor):
    Record = apps.get_model('users', 'Record')
    Record.objects.filter(event__contains="extra_form_done").update(event="extra_form_done")

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0024_auto_20210526_1921'),
        ('modules', '0029_auto_20210616_0945'),
    ]

    operations = [
        migrations.AlterField(
            model_name='record',
            name='event',
            field=models.CharField(choices=[('student_survey', 'Completed student survey'), ('teacher_survey', 'Completed teacher survey'), ('reg_confirmed', 'Confirmed registration'), ('attended', 'Attended program'), ('checked_out', 'Checked out of program'), ('conf_email', 'Was sent confirmation email'), ('teacher_quiz_done', 'Completed teacher quiz'), ('paid', 'Paid for program'), ('med', 'Submitted medical form'), ('med_bypass', 'Recieved medical bypass'), ('liab', 'Submitted liability form'), ('onsite', 'Registered for program onsite'), ('schedule_printed', 'Printed student schedule onsite'), ('teacheracknowledgement', 'Did teacher acknowledgement'), ('studentacknowledgement', 'Did student acknowledgement'), ('lunch_selected', 'Selected a lunch block'), ('student_extra_form_done', 'Filled out Student Custom Form'), ('teacher_extra_form_done', 'Filled out Teacher Custom Form'), ('extra_costs_done', 'Filled out Student Extra Costs Form'), ('donation_done', 'Filled out Donation Form'), ('waitlist', 'Waitlisted for a program'), ('interview', 'Teacher-interviewed for a program'), ('teacher_training', 'Attended teacher-training for a program'), ('teacher_checked_in', 'Teacher checked in for teaching on the day of the program'), ('twophase_reg_done', 'Completed two-phase registration')], max_length=80),
        ),
        migrations.RunPython(set_my_defaults, reverse_func),
    ]
